package{	import cc.milkshape.main.*;	import cc.milkshape.preloader.PreloaderKb;	import cc.milkshape.preloader.events.PreloaderEvent;	import cc.milkshape.user.Login;	import cc.milkshape.utils.Calcul;	import cc.milkshape.utils.MilkshapeMenu;	import cc.milkshape.utils.TableLine;		import flash.text.TextFieldAutoSize;	import flash.display.Shape;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.geom.ColorTransform;		import nl.demonsters.debugger.MonsterDebugger;

	[SWF(width='960', height='600', frameRate='31', backgroundColor='#191919')]		public class Main extends Sprite	{		private var _equalizer:Equalizer;		private var _menu:Menu;		private var _subMenu:SubMenu;		private var _login:Login;		private var _logo:Logo;		private var _fullscreen:Fullscreen;		private var _pageContainer:PreloaderKb;		private var _bottomBar:Shape;		private var _topBar:Shape;		private var _barBgColor:int;		private var _background:TableLine;		private var _infoArea:LabelStandard0757Clp;		private var _msg:String;		private var _listChar:String;		private var _count:int;		private var _progress:String;				public function Main()		{			var debugger:MonsterDebugger = new MonsterDebugger(this);			_barBgColor = 0x0a0a0a;			addEventListener(Event.ADDED_TO_STAGE, _handlerAddedToStage);		}				private function _handlerAddedToStage(e:Event):void		{			var mct:MilkshapeMenu = new MilkshapeMenu();// Menu contextuel personnalisé			contextMenu = mct.cm;						stage.align = StageAlign.TOP_LEFT;        	stage.scaleMode = StageScaleMode.NO_SCALE;        	stage.addEventListener(Event.RESIZE, _resize);        	        				_menu = new Menu(new Array(				{label: 'home', slug: 'home'},				{label: 'concept', slug: 'concept'},				{label: 'issues', slug: 'issues'},				{label: 'artists', slug: 'artists'},				{label: 'contact', slug: 'contact'}			));			_menu.addEventListener(PreloaderEvent.LOAD, _loadSwf);						_subMenu = new SubMenu();			_subMenu.addEventListener(PreloaderEvent.INFO, _loadSwf);						_fullscreen = new Fullscreen();						_equalizer = new Equalizer();						_login = new Login();						_logo = new Logo();						_bottomBar = new Shape();			_bottomBar.graphics.beginFill(_barBgColor);			_bottomBar.graphics.drawRect(0, 0, stage.stageWidth, 33);			_bottomBar.graphics.endFill();						_topBar = new Shape();			_topBar.graphics.beginFill(_barBgColor);			_topBar.graphics.drawRect(0, 0, stage.stageWidth, 60);			_topBar.graphics.endFill();						_infoArea = new LabelStandard0757Clp();			_infoArea.label.autoSize = TextFieldAutoSize.LEFT;			_infoArea.label.text = '';			_listChar = '?,;!.:/+-@#&=%^$*azertyuiopqsdfghjklmwxcvbn?,;!.:/+-@#&=%^$*AZERTYUIOPQSDFGHJKLMWXCVBN1234567890?,;!.:/+-@#&=%^$*';			_putMessage('Salut les amis ceci est un fucking test');			_progress = '';						_pageContainer = new PreloaderKb();			_pageContainer.loadMedia('issues.swf');						_background = new TableLine(stage.stageWidth*2, stage.stageHeight*2, 100, 100, 0x202020);            // On colore les éléments du main            var mainColorTransform:ColorTransform = new ColorTransform();			mainColorTransform.color = 0xffdd00;			_logo.transform.colorTransform = mainColorTransform;			mainColorTransform.color = 0x999999;			_fullscreen.transform.colorTransform = mainColorTransform;			_equalizer.transform.colorTransform = mainColorTransform;			addChild(_background);			addChild(_pageContainer);			addChild(_bottomBar);			addChild(_topBar);			addChild(_menu);			addChild(_subMenu);			addChild(_login);			addChild(_logo);			addChild(_fullscreen);			addChild(_equalizer);			addChild(_infoArea);						_itemsDisposition();		}				private function _putMessage(msg:String):void		{			_msg = msg.toUpperCase();			if (!hasEventListener(Event.ENTER_FRAME))				addEventListener(Event.ENTER_FRAME, _enterFrame);		}				private function _enterFrame(e:Event):void		{			_infoArea.label.text = _progress + _listChar.charAt(Calcul.randRange(0, _listChar.length - 1)); 						if(_count == 3)			{				_progress += _msg.charAt(_progress.length);				_count = 0;			}						if (_progress.length == _msg.length)			{				_infoArea.label.text = _progress;				removeEventListener(Event.ENTER_FRAME, _enterFrame);			}						_infoArea.x = stage.stageWidth - _infoArea.label.width - 8;						_count++;		}				private function _loadSwf(e:PreloaderEvent):void		{			try			{				_pageContainer.unloadMedia();			}			catch(e:Error)			{				trace(e.message);			}			try			{				_pageContainer.loadMedia(e.msg + '.swf');			}			catch(e:Error)			{				trace(e.message);			}		}				private function _itemsDisposition():void		{			_pageContainer.y = 60;			_background.x = -50;			_menu.x = 37;			_logo.x = 37;			_logo.y = 12;			_login.x = 275;			_login.y = 24;			_fullscreen.y = 12;			_equalizer.y = _fullscreen.y + 20;			_resize();		}				private function _resize(e:Event = null):void		{			_topBar.width = stage.stageWidth;						_bottomBar.y = stage.stageHeight - 33;			_bottomBar.width = stage.stageWidth;							_fullscreen.x = stage.stageWidth - 27;			_equalizer.x = _fullscreen.x;			_menu.y = stage.stageHeight - 21;						_infoArea.y = stage.stageHeight - 50;			_infoArea.x = stage.stageWidth - _infoArea.label.width;						_subMenu.y = stage.stageHeight - 23;			_subMenu.x = stage.stageWidth - 70;		}	}}